#! /usr/bin/python3

import sys
import getopt

#
# sneer_default
#
# parameters:
# word -word in the input string that the character you are considering to
# 	upper or lower is from
# index-index of the character you are considering to upper or lower
# 
# return:
# boolean (capitalize this character or not)
#
# parameters allow for a wide variety of conditions to make your own sarcastic
# looking text. sneer_default simply flips a coin
# 
# intended to be passed in as an argument to the main function
#

def sneer_default(word, index):
    import random
    return random.choice([True,False])


#
# char_to_words
#
# parameters:
# char_list -	list of chars
#
# return:
# word_list - list of strings
#
# concatenates chars into string, seperated by spaces
#
# in: ['a','p','p','l','e',' ','j','u','i','c','e']
# out: ["apple", "juice"]
#

def char_to_words(char_list):
    word_list = ''.join(char_list)
    word_list =  word_list.split(' ')
    return word_list

def sneer(sneer_function, words):
        sneered = []
        for word in words:
            l_word = list(''.join(word))
            for i, letter in enumerate(word):
                if sneer_function(word, i):
                    l_word[i] = l_word[i].upper()
                else:
                    l_word[i] = l_word[i].lower()
            l_word.append(' ')
            sneered += l_word
		# Delete trailing newline
        del sneered[-1]
        return sneered
#
# main
#
# parameters:
# sneer_function -	function that takes in a word and index, and returns true or false
#
# uses sneer_function to decide whether or not to capitalize a letter
#

def main(sneer_function):
    input_from_file = False
    output_to_file = False

    opts, args = getopt.getopt(sys.argv[1:], "f:o:")
    for opt, arg in opts:
        if opt == "-f":
            input_from_file = True
            input_path = arg
        if opt == "-o":
            output_to_file = True
            output_path = arg

    if input_from_file:
        with open(input_path) as f:
            content = f.read()
            input = list(content)
            input = char_to_words(input)
    else:
        # Get input
        input = args
        if len(input) == 0: #if there are no normal arguments
            args = list(sys.stdin.read()) #check stdin
            input = char_to_words(args) #convert to proper format
            if input[-1][-1] == '\n':
                input[-1] = args[-1][:-1] #remove \n

    if len(input) == 0: #if there are still no normal arguments
        sys.exit() #exit

    # Run sneer
    sneered = sneer(sneer_function, input)

    if output_to_file:
        with open(output_path, 'w+') as f:
            f.write(''.join(sneered))
    else:
        print(''.join(sneered))

main(sneer_default)
